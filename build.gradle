plugins {
    id 'fabric-loom' version '0.7.34'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    repositories {
        mavenLocal()
        maven {
            name = 'Aliyun Mirror'
            url  = 'https://maven.aliyun.com/repository/public'
        }
        maven {
            name = 'COVID-Trump'
            url = 'https://covid-trump.github.io/mvn/'
        }
        maven {
            name = "TerraformersMC"
            url  = 'https://maven.terraformersmc.com/releases/'
        }
    }

    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:1.16.5"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modApi "xland.mcmod:enchlevel-langpatch:1.0.1"
}

processResources {
    inputs.property "version", project.version

    /*from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }*/
    filesMatching('fabric.mod.json') {
        expand 'version' : project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile.class).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible())
        it.options.release = targetVersion
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.

java {
    withSourcesJar()
    //withJavadocJar()
}

jar {
    from ("LICENSE") {
        rename {  "${it}_${project.archivesBaseName}"  }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            //artifact(javadocJar) {
            //    builtBy javadoc
            //}
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}
